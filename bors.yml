---
- hosts: localhost
  name: Cleanup local known hosts

  tasks:
    - name: Remove existing known host
      known_hosts:
        name: run.fcd.dev
        state: absent

    - name: Wait until DNS is resolving
      command: host run.fcd.dev
      register: bors_ip
      retries: 10
      delay: 60
      until: bors_ip.rc == 0

    - name: Purge host keys of IPs from previous instances
      lineinfile:
        path: '{{ ansible_user_dir }}/.ssh/known_hosts'
        regexp: '^{{ bors_ip.stdout.split()[-1] }} .*'
        state: absent

    - name: Check hashed known hosts for hostname
      command: ssh-keygen -H -F run.fcd.dev
      register: ssh_keygen_hostname
      failed_when: ssh_keygen_hostname.rc not in [0, 1]

    - name: Purge hashed known hosts of matched hostname
      lineinfile:
        path: '{{ ansible_user_dir }}/.ssh/known_hosts'
        line: '{{ ssh_keygen_hostname.stdout_lines[-1] }}'
        state: absent
      when: ssh_keygen_hostname.rc == 0

    - name: Check hashed known hosts for IP
      command: ssh-keygen -H -F {{ bors_ip.stdout.split()[-1] }}
      register: ssh_keygen_ip
      failed_when: ssh_keygen_ip.rc not in [0, 1]

    - name: Purge hashed known hosts of matched IP
      lineinfile:
        path: '{{ ansible_user_dir }}/.ssh/known_hosts'
        line: '{{ ssh_keygen_ip.stdout_lines[-1] }}'
        state: absent

      when: ssh_keygen_ip.rc == 0
    - name: Add keys for host
      shell: ssh-keyscan run.fcd.dev | grep ssh-rsa >> '{{ ansible_user_dir }}/.ssh/known_hosts'

- hosts: bors
  name: Init bors

  vars:
    bors_version: v0.2.0
    user_bin: '{{ ansible_user_dir }}/bin'
    contrib_files:
      - { path: bors.sh, prefix: .local/share/bors }
      - { path: routes.yml, prefix: .config/bors }

  tasks:
    - name: Ensure user bin
      file:
        name: '{{ user_bin }}'
        state: directory

    - name: Download bors
      get_url:
        url: 'https://github.com/femnad/bors/releases/download/{{ bors_version }}/bors'
        dest: '{{ user_bin }}'
        mode: '0755'

    - name: Ensure config and data paths
      file:
        path: '{{ ansible_user_dir }}/{{ item.prefix }}'
        state: directory
      loop: '{{ contrib_files }}'

    - name: Download contrib files
      get_url:
        url: 'https://raw.githubusercontent.com/femnad/bors/master/contrib/{{ item.path }}'
        dest: '{{ ansible_user_dir }}/{{ item.prefix }}/{{ item.path }}'
      loop: '{{ contrib_files }}'

    - name: Download caddy
      unarchive:
        src: https://github.com/caddyserver/caddy/releases/download/v2.2.1/caddy_2.2.1_linux_amd64.tar.gz
        dest: /usr/local/bin
        remote_src: yes
        exclude:
          - LICENSE
          - README.md
      become: yes

    - name: Caddy service
      vars:
        exec: /usr/local/bin/caddy reverse-proxy --from run.fcd.dev --to localhost:8080
        description: Caddy
      template:
        src: basic.service.j2
        dest: /usr/lib/systemd/system/caddy.service
      become: yes

    - name: Persistent Systemd storage enabled for user services
      lineinfile:
        path: /etc/systemd/journald.conf
        regexp: '#Storage=(auto|volatile)'
        line: Storage=persistent
      become: true

    - name: Ensure user services dir
      file:
        name: '{{ ansible_user_dir }}/.config/systemd/user'
        state: directory

    - name: Bors service
      vars:
        exec: '{{ user_bin}}/bors'
        description: Bors
      template:
        src: basic.service.j2
        dest: '{{ ansible_user_dir }}/.config/systemd/user/bors.service'

    - name: Bors started
      systemd:
        name: bors
        state: started
        daemon_reload: yes
        scope: user

    - name: Caddy started
      systemd:
        name: caddy
        state: started
        daemon_reload: yes
      become: yes
...
